def buscar_valor(matriz, valor):
    for i, fila in enumerate(matriz):
        for j, elemento in enumerate(fila):
            if elemento == valor:
                return (i, j)
    return None

def main():
    matriz = [
        [10, 20, 30],
        [40, 50, 60],
        [70, 80, 90]
    ]
    
    valor = int(input("Ingrese el valor a buscar: "))
    resultado = buscar_valor(matriz, valor)
    
    if resultado:
        print(f"Valor encontrado en la posición: {resultado}")
    else:
        print("Valor no encontrado")

if __name__ == "__main__":
    main()
def bubble_sort(fila):
    n = len(fila)
    for i in range(n):
        for j in range(0, n-i-1):
            if fila[j] > fila[j+1]:
                fila[j], fila[j+1] = fila[j+1], fila[j]

def main():
    matriz = [
        [9, 2, 5],
        [7, 8, 1],
        [3, 4, 6]
    ]
    
    print("Matriz original:")
    for fila in matriz:
        print(fila)
    
    fila_a_ordenar = int(input("Ingrese el índice de la fila a ordenar (0-2): "))
    if 0 <= fila_a_ordenar < len(matriz):
        bubble_sort(matriz[fila_a_ordenar])
        print("Matriz con la fila ordenada:")
        for fila in matriz:
            print(fila)
    else:
        print("Índice de fila no válido")

if __name__ == "__main__":
    main()
git clone https://github.com/tu_usuario/busqueda_y_ordenacion_matrices.git
git add busqueda_matriz.py ordenacion_matriz.py
git commit -m "Añadidos programas de búsqueda y ordenación en matrices multidimensionales"
git push origin main
